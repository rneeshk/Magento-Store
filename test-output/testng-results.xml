<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="24" passed="24" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-06-30T04:55:01 IST" name="Default suite" finished-at="2025-06-30T05:00:19 IST" duration-ms="318250">
    <groups>
    </groups>
    <test started-at="2025-06-30T04:55:01 IST" name="Default test" finished-at="2025-06-30T05:00:19 IST" duration-ms="318250">
      <class name="tests.LoginTest">
        <test-method is-config="true" signature="setupSuite()[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:55:01 IST" name="setupSuite" finished-at="2025-06-30T04:55:01 IST" duration-ms="186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSuite -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:55:01 IST" name="setup" finished-at="2025-06-30T04:55:06 IST" duration-ms="4868" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testSuccessfulLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testSuccessfulLogin()[pri:1, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:55:06 IST" name="testSuccessfulLogin" description="1. Verify successful login with a valid registered email and password." finished-at="2025-06-30T04:55:17 IST" duration-ms="10867" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccessfulLogin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:55:17 IST" name="tearDown" finished-at="2025-06-30T04:55:17 IST" duration-ms="180" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSuccessfulLogin status=SUCCESS method=LoginTest.testSuccessfulLogin()[pri:1, instance:tests.LoginTest@682b2fa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:55:17 IST" name="setup" finished-at="2025-06-30T04:55:21 IST" duration-ms="3943" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testRedirectionToMyAccount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testRedirectionToMyAccount()[pri:2, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:55:21 IST" name="testRedirectionToMyAccount" description="2. Assert redirection to the &#039;My Account&#039; dashboard post-login." finished-at="2025-06-30T04:55:32 IST" duration-ms="11258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRedirectionToMyAccount -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:55:32 IST" name="tearDown" finished-at="2025-06-30T04:55:32 IST" duration-ms="182" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRedirectionToMyAccount status=SUCCESS method=LoginTest.testRedirectionToMyAccount()[pri:2, instance:tests.LoginTest@682b2fa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:55:32 IST" name="setup" finished-at="2025-06-30T04:55:36 IST" duration-ms="3860" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testHeaderUpdatesOnLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testHeaderUpdatesOnLogin()[pri:3, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:55:36 IST" name="testHeaderUpdatesOnLogin" description="3. Assert the header updates to show a welcome message and account links." finished-at="2025-06-30T04:55:47 IST" duration-ms="10267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeaderUpdatesOnLogin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:55:47 IST" name="tearDown" finished-at="2025-06-30T04:55:47 IST" duration-ms="165" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHeaderUpdatesOnLogin status=SUCCESS method=LoginTest.testHeaderUpdatesOnLogin()[pri:3, instance:tests.LoginTest@682b2fa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:55:47 IST" name="setup" finished-at="2025-06-30T04:55:51 IST" duration-ms="4019" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testLoginWithCaseInsensitiveEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testLoginWithCaseInsensitiveEmail()[pri:4, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:55:51 IST" name="testLoginWithCaseInsensitiveEmail" description="4. Verify login is successful using a case-insensitive email address." finished-at="2025-06-30T04:56:04 IST" duration-ms="12812" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginWithCaseInsensitiveEmail -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:56:04 IST" name="tearDown" finished-at="2025-06-30T04:56:04 IST" duration-ms="184" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginWithCaseInsensitiveEmail status=SUCCESS method=LoginTest.testLoginWithCaseInsensitiveEmail()[pri:4, instance:tests.LoginTest@682b2fa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:56:04 IST" name="setup" finished-at="2025-06-30T04:56:08 IST" duration-ms="4298" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testCartPersistenceAfterLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testCartPersistenceAfterLogin()[pri:5, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:56:08 IST" name="testCartPersistenceAfterLogin" description="5. Verify if a guest adds items to the cart, the cart contents persist after logging in." finished-at="2025-06-30T04:56:46 IST" duration-ms="37769" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCartPersistenceAfterLogin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:56:46 IST" name="tearDown" finished-at="2025-06-30T04:56:46 IST" duration-ms="171" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCartPersistenceAfterLogin status=SUCCESS method=LoginTest.testCartPersistenceAfterLogin()[pri:5, instance:tests.LoginTest@682b2fa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:56:46 IST" name="setup" finished-at="2025-06-30T04:56:50 IST" duration-ms="4008" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testLoginFromDedicatedPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testLoginFromDedicatedPage()[pri:6, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:56:50 IST" name="testLoginFromDedicatedPage" description="6. Verify successful login from the dedicated login page." finished-at="2025-06-30T04:56:52 IST" duration-ms="2447" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginFromDedicatedPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:56:52 IST" name="tearDown" finished-at="2025-06-30T04:56:53 IST" duration-ms="181" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginFromDedicatedPage status=SUCCESS method=LoginTest.testLoginFromDedicatedPage()[pri:6, instance:tests.LoginTest@682b2fa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:56:53 IST" name="setup" finished-at="2025-06-30T04:56:57 IST" duration-ms="4714" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testLoginFailsWithIncorrectPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testLoginFailsWithIncorrectPassword()[pri:7, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:56:57 IST" name="testLoginFailsWithIncorrectPassword" description="7. Verify login fails with a valid email but an incorrect password." finished-at="2025-06-30T04:57:00 IST" duration-ms="2214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginFailsWithIncorrectPassword -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:57:00 IST" name="tearDown" finished-at="2025-06-30T04:57:00 IST" duration-ms="178" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginFailsWithIncorrectPassword status=SUCCESS method=LoginTest.testLoginFailsWithIncorrectPassword()[pri:7, instance:tests.LoginTest@682b2fa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:57:00 IST" name="setup" finished-at="2025-06-30T04:57:03 IST" duration-ms="3792" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testLoginFailsWithUnregisteredEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testLoginFailsWithUnregisteredEmail()[pri:8, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:57:03 IST" name="testLoginFailsWithUnregisteredEmail" description="8. Verify login fails with an unregistered email address." finished-at="2025-06-30T04:57:06 IST" duration-ms="2092" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginFailsWithUnregisteredEmail -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:57:06 IST" name="tearDown" finished-at="2025-06-30T04:57:06 IST" duration-ms="180" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginFailsWithUnregisteredEmail status=SUCCESS method=LoginTest.testLoginFailsWithUnregisteredEmail()[pri:8, instance:tests.LoginTest@682b2fa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:57:06 IST" name="setup" finished-at="2025-06-30T04:57:10 IST" duration-ms="4644" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testGenericErrorMessage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testGenericErrorMessage()[pri:9, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:57:10 IST" name="testGenericErrorMessage" description="9. Verify a generic error message is shown for any incorrect credential combination." finished-at="2025-06-30T04:57:16 IST" duration-ms="5346" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenericErrorMessage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:57:16 IST" name="tearDown" finished-at="2025-06-30T04:57:16 IST" duration-ms="132" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testGenericErrorMessage status=SUCCESS method=LoginTest.testGenericErrorMessage()[pri:9, instance:tests.LoginTest@682b2fa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:57:16 IST" name="setup" finished-at="2025-06-30T04:57:21 IST" duration-ms="4937" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testLoginFailsWithBlankEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testLoginFailsWithBlankEmail()[pri:10, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:57:21 IST" name="testLoginFailsWithBlankEmail" description="10. Verify login fails if the &#039;Email&#039; field is left blank." finished-at="2025-06-30T04:57:21 IST" duration-ms="145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginFailsWithBlankEmail -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:57:21 IST" name="tearDown" finished-at="2025-06-30T04:57:21 IST" duration-ms="137" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginFailsWithBlankEmail status=SUCCESS method=LoginTest.testLoginFailsWithBlankEmail()[pri:10, instance:tests.LoginTest@682b2fa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:57:21 IST" name="setup" finished-at="2025-06-30T04:57:25 IST" duration-ms="4126" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testLoginFailsWithBlankPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testLoginFailsWithBlankPassword()[pri:11, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:57:25 IST" name="testLoginFailsWithBlankPassword" description="11. Verify login fails if the &#039;Password&#039; field is left blank." finished-at="2025-06-30T04:57:25 IST" duration-ms="171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginFailsWithBlankPassword -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:57:25 IST" name="tearDown" finished-at="2025-06-30T04:57:26 IST" duration-ms="182" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginFailsWithBlankPassword status=SUCCESS method=LoginTest.testLoginFailsWithBlankPassword()[pri:11, instance:tests.LoginTest@682b2fa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:57:26 IST" name="setup" finished-at="2025-06-30T04:57:30 IST" duration-ms="4739" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testLoginFailsWithAllFieldsBlank()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testLoginFailsWithAllFieldsBlank()[pri:12, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:57:30 IST" name="testLoginFailsWithAllFieldsBlank" description="12. Verify submitting the form with both fields blank shows required field validation messages." finished-at="2025-06-30T04:57:30 IST" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginFailsWithAllFieldsBlank -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:57:30 IST" name="tearDown" finished-at="2025-06-30T04:57:31 IST" duration-ms="138" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginFailsWithAllFieldsBlank status=SUCCESS method=LoginTest.testLoginFailsWithAllFieldsBlank()[pri:12, instance:tests.LoginTest@682b2fa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:57:31 IST" name="setup" finished-at="2025-06-30T04:57:35 IST" duration-ms="4711" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testAccountLockout()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testAccountLockout()[pri:13, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:57:35 IST" name="testAccountLockout" description="13. Test for account lockout after a configured number of failed attempts." finished-at="2025-06-30T04:58:03 IST" duration-ms="27637" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAccountLockout -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:58:03 IST" name="tearDown" finished-at="2025-06-30T04:58:03 IST" duration-ms="183" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAccountLockout status=SUCCESS method=LoginTest.testAccountLockout()[pri:13, instance:tests.LoginTest@682b2fa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:58:03 IST" name="setup" finished-at="2025-06-30T04:58:06 IST" duration-ms="2974" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testLoginWithSpacesInEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testLoginWithSpacesInEmail()[pri:14, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:58:06 IST" name="testLoginWithSpacesInEmail" description="14. Verify that leading/trailing spaces in the email input are trimmed and login succeeds." finished-at="2025-06-30T04:58:17 IST" duration-ms="10922" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginWithSpacesInEmail -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:58:17 IST" name="tearDown" finished-at="2025-06-30T04:58:17 IST" duration-ms="144" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginWithSpacesInEmail status=SUCCESS method=LoginTest.testLoginWithSpacesInEmail()[pri:14, instance:tests.LoginTest@682b2fa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:58:17 IST" name="setup" finished-at="2025-06-30T04:58:22 IST" duration-ms="4875" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testLoginFailsWithSpacesInPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testLoginFailsWithSpacesInPassword()[pri:15, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:58:22 IST" name="testLoginFailsWithSpacesInPassword" description="15. Verify that leading/trailing spaces in the password input are not trimmed and login fails." finished-at="2025-06-30T04:58:34 IST" duration-ms="12357" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginFailsWithSpacesInPassword -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:58:34 IST" name="tearDown" finished-at="2025-06-30T04:58:35 IST" duration-ms="138" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginFailsWithSpacesInPassword status=SUCCESS method=LoginTest.testLoginFailsWithSpacesInPassword()[pri:15, instance:tests.LoginTest@682b2fa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:58:35 IST" name="setup" finished-at="2025-06-30T04:58:39 IST" duration-ms="4716" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testSqlInjectionAttempt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testSqlInjectionAttempt()[pri:16, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:58:39 IST" name="testSqlInjectionAttempt" description="16. Attempt a basic SQL injection and verify login failure." finished-at="2025-06-30T04:58:39 IST" duration-ms="187" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSqlInjectionAttempt -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:58:39 IST" name="tearDown" finished-at="2025-06-30T04:58:40 IST" duration-ms="155" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSqlInjectionAttempt status=SUCCESS method=LoginTest.testSqlInjectionAttempt()[pri:16, instance:tests.LoginTest@682b2fa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:58:40 IST" name="setup" finished-at="2025-06-30T04:58:44 IST" duration-ms="4413" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testForgotPasswordLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testForgotPasswordLink()[pri:17, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:58:44 IST" name="testForgotPasswordLink" description="17. Verify the &#039;Forgot Your Password?&#039; link is present and navigates correctly." finished-at="2025-06-30T04:58:45 IST" duration-ms="1381" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForgotPasswordLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:58:45 IST" name="tearDown" finished-at="2025-06-30T04:58:46 IST" duration-ms="184" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testForgotPasswordLink status=SUCCESS method=LoginTest.testForgotPasswordLink()[pri:17, instance:tests.LoginTest@682b2fa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:58:46 IST" name="setup" finished-at="2025-06-30T04:58:50 IST" duration-ms="4132" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testCreateAccountButtonNavigation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testCreateAccountButtonNavigation()[pri:18, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:58:50 IST" name="testCreateAccountButtonNavigation" description="18. Verify the &#039;Create an Account&#039; button is present and navigates correctly." finished-at="2025-06-30T04:58:52 IST" duration-ms="2217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateAccountButtonNavigation -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:58:52 IST" name="tearDown" finished-at="2025-06-30T04:58:52 IST" duration-ms="187" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCreateAccountButtonNavigation status=SUCCESS method=LoginTest.testCreateAccountButtonNavigation()[pri:18, instance:tests.LoginTest@682b2fa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:58:52 IST" name="setup" finished-at="2025-06-30T04:58:56 IST" duration-ms="4322" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testPasswordIsMasked()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testPasswordIsMasked()[pri:19, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:58:56 IST" name="testPasswordIsMasked" description="19. Verify the password field masks user input." finished-at="2025-06-30T04:58:56 IST" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPasswordIsMasked -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:58:56 IST" name="tearDown" finished-at="2025-06-30T04:58:57 IST" duration-ms="153" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPasswordIsMasked status=SUCCESS method=LoginTest.testPasswordIsMasked()[pri:19, instance:tests.LoginTest@682b2fa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:58:57 IST" name="setup" finished-at="2025-06-30T04:59:01 IST" duration-ms="4770" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testSessionCookieCreation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testSessionCookieCreation()[pri:20, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:59:01 IST" name="testSessionCookieCreation" description="20. Verify a session cookie is created upon successful login." finished-at="2025-06-30T04:59:14 IST" duration-ms="12942" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionCookieCreation -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:59:14 IST" name="tearDown" finished-at="2025-06-30T04:59:15 IST" duration-ms="180" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSessionCookieCreation status=SUCCESS method=LoginTest.testSessionCookieCreation()[pri:20, instance:tests.LoginTest@682b2fa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:59:15 IST" name="setup" finished-at="2025-06-30T04:59:20 IST" duration-ms="5365" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testRedirectFromLoginWhenLoggedIn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testRedirectFromLoginWhenLoggedIn()[pri:21, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:59:20 IST" name="testRedirectFromLoginWhenLoggedIn" description="21. Verify navigating back to the login page redirects to the account dashboard." finished-at="2025-06-30T04:59:33 IST" duration-ms="12896" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRedirectFromLoginWhenLoggedIn -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:59:33 IST" name="tearDown" finished-at="2025-06-30T04:59:33 IST" duration-ms="187" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRedirectFromLoginWhenLoggedIn status=SUCCESS method=LoginTest.testRedirectFromLoginWhenLoggedIn()[pri:21, instance:tests.LoginTest@682b2fa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:59:33 IST" name="setup" finished-at="2025-06-30T04:59:37 IST" duration-ms="3837" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testHeaderLinksChangeAfterLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testHeaderLinksChangeAfterLogin()[pri:22, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:59:37 IST" name="testHeaderLinksChangeAfterLogin" description="22. Verify the &#039;Sign In&#039; link is replaced by account-specific links." finished-at="2025-06-30T04:59:58 IST" duration-ms="21336" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeaderLinksChangeAfterLogin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:59:58 IST" name="tearDown" finished-at="2025-06-30T04:59:58 IST" duration-ms="184" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHeaderLinksChangeAfterLogin status=SUCCESS method=LoginTest.testHeaderLinksChangeAfterLogin()[pri:22, instance:tests.LoginTest@682b2fa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T04:59:58 IST" name="setup" finished-at="2025-06-30T05:00:02 IST" duration-ms="3925" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testResponsiveLayoutOnMobile()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testResponsiveLayoutOnMobile()[pri:23, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T05:00:02 IST" name="testResponsiveLayoutOnMobile" description="23. Verify the page is responsive on mobile viewports." finished-at="2025-06-30T05:00:03 IST" duration-ms="427" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponsiveLayoutOnMobile -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T05:00:03 IST" name="tearDown" finished-at="2025-06-30T05:00:03 IST" duration-ms="151" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testResponsiveLayoutOnMobile status=SUCCESS method=LoginTest.testResponsiveLayoutOnMobile()[pri:23, instance:tests.LoginTest@682b2fa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T05:00:03 IST" name="setup" finished-at="2025-06-30T05:00:08 IST" duration-ms="4880" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testEnterKeySubmitsForm()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testEnterKeySubmitsForm()[pri:24, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T05:00:08 IST" name="testEnterKeySubmitsForm" description="24. Verify hitting the &#039;Enter&#039; key in the password field submits the form." finished-at="2025-06-30T05:00:19 IST" duration-ms="11422" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnterKeySubmitsForm -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T05:00:19 IST" name="tearDown" finished-at="2025-06-30T05:00:19 IST" duration-ms="185" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEnterKeySubmitsForm status=SUCCESS method=LoginTest.testEnterKeySubmitsForm()[pri:24, instance:tests.LoginTest@682b2fa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDownSuite()[pri:0, instance:tests.LoginTest@682b2fa]" started-at="2025-06-30T05:00:19 IST" name="tearDownSuite" finished-at="2025-06-30T05:00:20 IST" duration-ms="210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownSuite -->
      </class> <!-- tests.LoginTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
